# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/01_utils.ipynb.

# %% auto 0
__all__ = ['trace', 'draw_dot']

# %% ../nbs/01_utils.ipynb 3
import numpy as np
import scipy as sp
import matplotlib.pyplot as plt 
# import graphviz
from graphviz import Digraph
from .core import Value


# %% ../nbs/01_utils.ipynb 11
def trace(root):
    nodes, edges = set(), set()
    def build(v):
        if v: nodes.add(v)
        for i in v._prev:
            nodes.add(i)
            edges.add((i, v))
            build(i)
    build(root)
    return nodes, edges

# %% ../nbs/01_utils.ipynb 14
def draw_dot(root):
    dot = Digraph(format="svg", graph_attr={"rankdir":'LR'})
    nodes, edges = trace(root)
    for n in nodes:
        # print(str(id(n)))
        uid = str(id(n))
        dot.node(uid, label=f" {{ {n.label}|{n.data:.4f}  }}", shape='record') # For { in f-string use {{
        if n._op:
            dot.node(uid+n._op, n._op)
            dot.edge(uid+n._op, uid)
    for n1, n2 in edges:
        dot.edge(str(id(n1)), str(id(n2))+n2._op)
        
    return dot
